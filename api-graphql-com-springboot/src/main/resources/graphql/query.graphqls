#schema {
#    query: Query
#    mutation: Mutation
#}

scalar BigDecimal
scalar DateTime
scalar PositiveInt

type Query {
    hello:String
    soma(a: Int, b: Int): Int
}

type Mutation {

}

# Alias em consultas:
#{
#    c1: cliente(id: 1) {
#        id,
#        nome,
#        email
#    },
#    c2: cliente(id: 2) {
#        id,
#        nome,
#        email
#    }
#}

# Fragments:

#fragment fragCliente on Cliente {
#    id, nome
#}

#{
#    c1: cliente(id: 1) {
#       ...fragCliente
#    },
#    c2: cliente(id: 2) {
#       ...fragCliente
#    }
#}

# Tipos nulos no graphql, nullability

#type Query {
#    hello:String! -> "!" indica que n√£o pode retornar nulo
#    soma(a: Int, b: Int): Int
#}

# input type

#mutation {
#    saveCliente(cliente: {nome: "Kelly Castelo", email: "kelly@gmail.com"}){
#        id, nome, email
#    }
#}

# query com variaveis

#query NomeDaQuery ($id: ID!){
#    cliente(id:$id) {
#        id,
#        nome,
#        email
#    }
#}

